name: üöÄ Deploy

on:
  push:
    branches:
      - main
      - dev
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ‚¨£ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: üì• Install deps
        run: npm install

      - name: üî¨ Lint
        run: npm run lint

  typecheck:
    name:  ¶ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: üì• Install deps
        run: npm install

      - name: üîé Type check
        run: npm run typecheck --if-present

  vitest:
    name: ‚ö° Vitest
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: üì• Install deps
        run: npm install

      - name: ‚ö° Run vitest
        run: npm run test -- --coverage

  cypress:
    name: ‚ö´Ô∏è Cypress
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üèÑ Copy test env vars
        run: cp .env.example .env

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: üì• Install deps
        run: npm install

      - name: üê≥ Docker compose
        # the sleep is just there to give time for postgres to get started
        run: docker compose -f ./other/docker-compose-postgres.yml up -d && sleep 3
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/postgres"

      - name: üõ† Setup Database
        run: npx prisma migrate reset --force

      - name: ‚öôÔ∏è Build
        run: npm run build

      - name: üå≥ Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm run start:mocks
          wait-on: http://localhost:8811
        env:
          PORT: 8811

  deploy:
    name: üöÄ Deploy
    runs-on: ubuntu-latest
    needs: [lint, typecheck, vitest, cypress]
    # set the environment variable to the branch name
    # for environment variables and secrets
    environment:
      name: ${{ github.ref_name }}
    # only deploy main/dev branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üèÑ Build env vars file
        env:
          APP_PORT: ${{ vars.APP_PORT }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
        run: |
          echo "DATABASE_URL=$DATABASE_URL" >> .env
          echo "APP_PORT=$APP_PORT" >> .env
          echo "SESSION_SECRET=$SESSION_SECRET" >> .env
          cat .env

      - name: üöö Move Dockerfile
        run: |
          mv ./other/Dockerfile ./Dockerfile
          mv ./other/.dockerignore ./.dockerignore
          mv ./other/docker-compose.yml ./docker-compose.yml

      - name: üö´ Stopping app
        uses: appleboy/ssh-action@v1.0.0
        env:
          APP_DIR: ${{ vars.APP_DIR }}
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: APP_DIR
          script: |
            [[ -z $APP_DIR ]] && echo "APP_DIR not defined" ||  docker compose --env-file $APP_DIR/.env -f $APP_DIR/docker-compose.yml down
            [[ -z $APP_DIR ]] && echo "APP_DIR not defined" || rm -rf $APP_DIR/*

      - name: üìÅ Copy file via ssh
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./,!.git"
          target: ${{ vars.APP_DIR }}

      - name: üöÄ Deploy
        uses: appleboy/ssh-action@v1.0.0
        env:
          APP_DIR: ${{ vars.APP_DIR }}
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: APP_DIR
          script: |
            docker compose --env-file $APP_DIR/.env -f $APP_DIR/docker-compose.yml up --build -d
            echo "Build success"
